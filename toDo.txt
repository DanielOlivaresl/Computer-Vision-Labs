Things to do                                          
*Hacer que funcione con un dataset de MNIST
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-Limpiar el codigo
  *Generar mas subclases para tener mas orden (Done)
  *Agregar pragma once para no tener problemas de dependencias de los .h (Done)

  *Pasar todas las estructuras de datos a formato MatrixXd, de tam dinamico (Daniel)
  *Agregar clase para poder leer y cargar cualquier tipo de dato
  
  *Resolver los problemas de configuraciones




    

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


Computations.h: (Main Class)
  
  Distances(subclass): 
    -Euclidean
    -Manhalanobis

  
  LinearAlgebra:
    -CovarianceMatrix
    -Dot product
    -matrix Multiplication
    -...

  Math:
    -fft1d
    -fft2d
    

  Helper:
    -getClosest/getMaxprob(Asc,Des)
    -normalize Column
    -clockwise
    -counterclockwise
    -getrandom
    -generateColors
    -calculateBounds
    -calculateSubImage
    -storeImages
    -computeGistDescriptor
    -gistGabor

Machine Learning(main class):

  -kNN
  -KMeans

  SVM(subclass):
    -lineal

  Model(subclass):
    -Network

  
  Layers(subclass):
    -Dense
    -Conv
    -Pooling
    -Flatten
    -Dropout
    -L1,L2 regularizers & batch norm
    

    Metrics:
      -ConfusionMatrix
      -Loss
      -etc...

    CrossValidation:


Plots(main class):

  -scatter(2d)
  -scatter(3d)
  *plots for categorical data
  -histogram
  -confusionmatrix
  -loss
  -heatmap
  



ImageTransformations (main class):

  -QImageToEigen
  -EigenToQImage
  -NormalizeImage
  ObjectMetrics(sub class):
    -area
    -perimeter
    -center of grav
    -humoments
    -centralmoments

  ColorSpaces:
    rbg
    hsv
    ymk
    gray
    bin, otsu

  PixelOperations:
    logtrans
    gammatrans
    
  Histogram
    histogram
    equalization
    matching
    linearEq
    normHist
    histToImage
    

  
  
  Spatial 
    -Convolution (Daniel)
    -Padding
    -DownN

  Kernels
    -Gabor
    -Gaussian
    -Laplace
    -User Created


ObjectDetection (mainclass):
  -segmentImage
  -regionGrowing
  -createBoundary 
  -ajdustBoundaryMask
  -ConnectedN4 (Detect object in binary image)
  -outline
  -nextcell
  -borderFollow
  -rasterscan


Reader(mainclass): All must return the same datatype
  -read_csv
  -read_txt
  -read_xlsx(possibly)
  -load_Image/images
  -load_model pyTorch/tensorflow

  EEGReader
      -Read_fif
    






-Features
  *Clase para manejar los eventos y paralelizarlo 
  *Funcion para descargar datasets 
  *Agregar funciones de PDI(Histogram manipulation, filters, edge detection, segmentation, clasification)
  *Agregar a la UI para hacer kernels dinamicos y filtrarlos en el momento
  *Video Manager 
  

  *Funcionalidad para poder crear datasets de videos de yt
  *Que puedas cargar formatos de tensorflow/pytorch
  
  *zoom para ver regiones






  *Implementar mas arquitecturas de Redes Neuronales
  *Visualizacion de archivos .csv y EDA (Exploratory Data Analisis) 

  *Visualizacion de red






  *cargar datos EEG, pasarlos a Eigen, especificamente el shape de los datos 
